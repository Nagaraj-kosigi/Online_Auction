# Generated by Django 5.2 on 2025-04-28 17:13

from django.db import migrations
from django.utils import timezone
import datetime
import random


def create_sample_auctions(apps, schema_editor):
    """
    Create sample auctions with realistic data
    """
    User = apps.get_model('auth', 'User')
    Category = apps.get_model('auctions', 'Category')
    Auction = apps.get_model('auctions', 'Auction')

    # Get or create a sample user if admin doesn't exist
    admin_user = User.objects.filter(username='admin').first()
    if not admin_user:
        admin_user = User.objects.create(
            username='demo_user',
            email='demo@example.com',
            is_staff=False,
            is_superuser=False,
            is_active=True,
        )

    # Get categories (should be created by previous migration)
    categories = list(Category.objects.all())
    if not categories:
        # Fallback if categories don't exist
        category_names = ['Electronics', 'Fashion', 'Home & Garden', 'Sports']
        categories = [Category.objects.create(name=name) for name in category_names]

    # Sample auction data
    sample_auctions = [
        {
            'title': 'iPhone 15 Pro - Brand New Sealed',
            'description': 'Brand new iPhone 15 Pro in Space Black. 256GB storage. Factory sealed with full warranty.',
            'starting_price': 899.99,
            'category_name': 'Electronics',
            'days_active': 7,
        },
        {
            'title': 'Vintage Leather Jacket',
            'description': 'Genuine leather jacket from the 1980s. Excellent condition with minimal wear. Size L.',
            'starting_price': 150.00,
            'category_name': 'Fashion',
            'days_active': 5,
        },
        {
            'title': 'Professional DSLR Camera Kit',
            'description': 'Complete DSLR camera kit including camera body, 3 lenses, tripod, and carrying case. Perfect for photography enthusiasts.',
            'starting_price': 750.00,
            'category_name': 'Electronics',
            'days_active': 10,
        },
        {
            'title': 'Antique Wooden Dining Table',
            'description': 'Beautiful handcrafted wooden dining table from the early 1900s. Seats 6 people comfortably.',
            'starting_price': 300.00,
            'category_name': 'Home & Garden',
            'days_active': 14,
        },
        {
            'title': 'Mountain Bike - Premium Model',
            'description': 'High-end mountain bike with carbon fiber frame, hydraulic disc brakes, and premium suspension. Barely used.',
            'starting_price': 1200.00,
            'category_name': 'Sports',
            'days_active': 8,
        },
        {
            'title': 'Rare Coin Collection',
            'description': 'Collection of 25 rare coins from around the world, including several limited mintage pieces.',
            'starting_price': 500.00,
            'category_name': 'Collectibles',
            'days_active': 12,
        },
        {
            'title': 'Designer Handbag - Limited Edition',
            'description': 'Authentic designer handbag from exclusive limited edition collection. Includes certificate of authenticity.',
            'starting_price': 850.00,
            'category_name': 'Fashion',
            'days_active': 6,
        },
        {
            'title': 'Smart Home Security System',
            'description': 'Complete smart home security system with cameras, sensors, and mobile app integration. Easy to install.',
            'starting_price': 275.00,
            'category_name': 'Electronics',
            'days_active': 9,
        },
    ]

    # Create auctions
    now = timezone.now()
    for auction_data in sample_auctions:
        # Find the category
        category_name = auction_data['category_name']
        category = next((c for c in categories if c.name == category_name), categories[0])

        # Calculate dates
        days_active = auction_data['days_active']
        end_date = now + datetime.timedelta(days=days_active)

        # Create the auction
        Auction.objects.create(
            title=auction_data['title'],
            description=auction_data['description'],
            starting_price=auction_data['starting_price'],
            current_price=auction_data['starting_price'],
            category=category,
            created_by=admin_user,
            start_date=now,
            end_date=end_date,
            is_active=True,
        )


class Migration(migrations.Migration):

    dependencies = [
        ('auctions', '0007_create_initial_categories'),
    ]

    operations = [
        migrations.RunPython(create_sample_auctions),
    ]
