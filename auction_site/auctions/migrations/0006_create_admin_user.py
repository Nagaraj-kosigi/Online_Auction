# Generated by Django 5.2 on 2025-04-28 15:23

from django.db import migrations


def create_admin_user(apps, schema_editor):
    """
    Create a default admin user during migration
    """
    # We need to handle this outside the migration transaction
    # to avoid transaction errors
    try:
        # Get the User model from apps registry to avoid circular imports
        User = apps.get_model('auth', 'User')
        UserModel = apps.get_model('auth', 'User')

        # Check if admin user exists
        if not UserModel.objects.filter(username='admin').exists():
            # Create user first
            user = UserModel.objects.create(
                username='admin',
                email='admin@example.com',
                is_staff=True,
                is_superuser=True,
                is_active=True,
                # Set a unusable password initially to avoid transaction issues
                # We'll set the real password in the build.sh script
            )
            # Don't set password here to avoid transaction issues
    except Exception as e:
        # Log the error but don't raise it to avoid breaking the migration
        print(f"Error creating admin user: {e}")
        # The build.sh script will handle creating the admin user as a fallback


class Migration(migrations.Migration):

    dependencies = [
        ('auctions', '0005_alter_bid_status'),
    ]

    operations = [
        migrations.RunPython(create_admin_user),
    ]
